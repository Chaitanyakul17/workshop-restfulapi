<?php

/**
 * @file
 * This module add node tags.
 */

use GuzzleHttp\Exception\GuzzleException;
use GuzzleHttp\Client;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_presave().
 */
function intelligent_tools_auto_tag_node_presave(EntityInterface $node) {
  $config = \Drupal::config('intelligent_tools.settings');
  $content_type_node = $config->get('intelligent_tools_content');
  $address_web = $config->get('intelligent_tools_ip');
  $content_type_node = strtolower($content_type_node);
  $content_type_node_array = explode(" ", $content_type_node);
  $content_type_field = $config->get('intelligent_tools_field');
  $content_type_field_array = explode(" ", $content_type_field);
  $content_to_be_tagged = $config->get('intelligent_tools_field_to');
  $content_to_be_tagged_array = explode(" ", $content_to_be_tagged);
  $number_of_tags = $config->get('intelligent_tools_tags');
  $number_of_tags_array = explode(" ", $number_of_tags);
  $node_main_flag = FALSE;
  foreach ($content_type_node_array as $key => $value) {
    if (($node_main_flag == FALSE)&&($node->getType() == $value)) {
      $node_main_flag = TRUE;
      $main_key = $key;
    }
  }
  $content_type_field = $content_type_field_array[$main_key];
  $content_to_be_tagged = $content_to_be_tagged_array[$main_key];
  $number_of_tokens = (int) $number_of_tags_array[$main_key];
  if ($node_main_flag == TRUE) {
    $body = $node->get($content_type_field)->getValue()[0]['value'];
    $all_tags = auto_tag_api($body, $number_of_tokens, $address_web);
    $node->set($content_to_be_tagged, $all_tags['all_tags']);
  }
}

/**
 * Separate auto tag api function.
 */
function auto_tag_api($body, $number_of_tags, $address_web) {
  $body = preg_replace('/ +/', ' ', preg_replace('/[^A-Za-z0-9 ]/', ' ', urldecode(html_entity_decode(strip_tags($body)))));
  try {
    $client = new Client(['base_uri' => $address_web]);
    $response = $client->request('POST', '', [
      'form_params' => [
        'text' => $body,
      ],
    ]);
    $text_nltk = json_decode($response->getBody()->getContents());
  }
  catch (GuzzleException $e) {
    \Drupal::logger('intelligent_tools')->error($e->getMessage());
    \Drupal::messenger()->addError($e->getMessage());
  }
  $a = [];
  $b = [];
  foreach ($text_nltk as $key => $value) {
    $a[] = $key;
    foreach ($value as $key1 => $value1) {
      $b[] = $value1;
    }
  }
  $arr = array_combine($a, $b);
  array_multisort($arr, SORT_DESC, SORT_NUMERIC, $arr);
  $count = 1;
  $all_tags = [];
  foreach ($arr as $key => $value) {
    if ($count > $number_of_tags) {
      break;
    }
    if ($terms = taxonomy_term_load_multiple_by_name($key, 'tags')) {
      $term = reset($terms);
    }
    else {
      $term = Term::create([
        'name' => $key,
        'vid' => 'tags',
      ]);
      $term->save();
    }
    array_push($all_tags, $term);
    $count++;
  }
  return ['all_tags' => $all_tags];
}
